# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: models.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0cmodels.proto"\xce\x01\n\x13\x41uthenticationToken\x12\n\n\x02id\x18\x01 \x02(\r\x12\x13\n\x0b\x61uth_device\x18\x02 \x02(\t\x12\x13\n\x0btoken_value\x18\x03 \x02(\t\x12\x10\n\x08username\x18\x04 \x01(\t\x12\x11\n\tnice_name\x18\x05 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x06 \x01(\x08\x12\x14\n\x0c\x63reated_time\x18\x07 \x02(\t\x12\x13\n\x0b\x65xpire_time\x18\x08 \x01(\t\x12\x0b\n\x03pin\x18\t \x01(\t\x12\x13\n\x04user\x18\n \x01(\x0b\x32\x05.User"\xb8\x01\n\x10\x42\x65verageProducer\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x0f\n\x07\x63ountry\x18\x03 \x01(\t\x12\x14\n\x0corigin_state\x18\x04 \x01(\t\x12\x13\n\x0borigin_city\x18\x05 \x01(\t\x12\x13\n\x0bis_homebrew\x18\x06 \x01(\x08\x12\x0b\n\x03url\x18\x07 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x08 \x01(\t\x12\x17\n\x07picture\x18\t \x01(\x0b\x32\x06.Image"\xb8\x03\n\x08\x42\x65verage\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12#\n\x08producer\x18\x03 \x02(\x0b\x32\x11.BeverageProducer\x12\x15\n\rbeverage_type\x18\x04 \x02(\t\x12\r\n\x05style\x18\x05 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x17\n\x07picture\x18\x07 \x01(\x0b\x32\x06.Image\x12\x14\n\x0cvintage_year\x18\x08 \x01(\r\x12\x13\n\x0b\x61\x62v_percent\x18\t \x01(\x01\x12\x17\n\x0f\x63\x61lories_per_ml\x18\n \x01(\x01\x12\x14\n\x0c\x63\x61rbs_per_ml\x18\x0b \x01(\x01\x12\x18\n\x10original_gravity\x18\x0c \x01(\x01\x12\x18\n\x10specific_gravity\x18\r \x01(\x01\x12\x12\n\nuntappd_id\x18\x0e \x01(\t\x12\x18\n\x10\x62\x65verage_backend\x18\x0f \x01(\t\x12\x1b\n\x13\x62\x65verage_backend_id\x18\x10 \x01(\t\x12\x11\n\tcolor_hex\x18\x11 \x01(\t\x12\x0b\n\x03srm\x18\x12 \x01(\x01\x12\x0b\n\x03ibu\x18\x13 \x01(\x01\x12\x13\n\x0bstar_rating\x18\x14 \x01(\x01"%\n\tBeerStyle\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t"\xd9\x01\n\x08\x42\x65\x65rType\x12\n\n\x02id\x18\x01 \x02(\t\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x11\n\tbrewer_id\x18\x03 \x02(\t\x12\x10\n\x08style_id\x18\x04 \x02(\t\x12\x0f\n\x07\x65\x64ition\x18\x06 \x01(\t\x12\x0b\n\x03\x61\x62v\x18\x07 \x01(\x01\x12\x13\n\x0b\x63\x61lories_oz\x18\x08 \x01(\x01\x12\x10\n\x08\x63\x61rbs_oz\x18\t \x01(\x01\x12\x18\n\x10specific_gravity\x18\n \x01(\x01\x12\x18\n\x10original_gravity\x18\x0b \x01(\x01\x12\x15\n\x05image\x18\x0c \x01(\x0b\x32\x06.Image"\xb7\x01\n\x06\x42rewer\x12\n\n\x02id\x18\x01 \x02(\t\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x11\n\x07\x63ountry\x18\x03 \x01(\t:\x00\x12\x16\n\x0corigin_state\x18\x04 \x01(\t:\x00\x12\x15\n\x0borigin_city\x18\x05 \x01(\t:\x00\x12\x14\n\nproduction\x18\x06 \x01(\t:\x00\x12\r\n\x03url\x18\x07 \x01(\t:\x00\x12\x15\n\x0b\x64\x65scription\x18\x08 \x01(\t:\x00\x12\x15\n\x05image\x18\t \x01(\x0b\x32\x06.Image"\xb2\x02\n\x05\x44rink\x12\n\n\x02id\x18\x01 \x02(\r\x12\r\n\x05ticks\x18\x02 \x02(\r\x12\x11\n\tvolume_ml\x18\x03 \x02(\x01\x12\x12\n\nsession_id\x18\x04 \x02(\r\x12\x0c\n\x04time\x18\x05 \x02(\t\x12\x10\n\x08\x64uration\x18\x06 \x01(\r\x12\x0e\n\x06keg_id\x18\x08 \x01(\r\x12\x0f\n\x07user_id\x18\t \x01(\t\x12\x15\n\rauth_token_id\x18\n \x01(\r\x12\x0b\n\x03url\x18\x0b \x01(\t\x12\r\n\x05shout\x18\x0c \x01(\t\x12\x13\n\x04user\x18\r \x01(\x0b\x32\x05.User\x12\x11\n\x03keg\x18\x0e \x01(\x0b\x32\x04.Keg\x12\x19\n\x07session\x18\x0f \x01(\x0b\x32\x08.Session\x12\x16\n\x06images\x18\x10 \x03(\x0b\x32\x06.Image\x12\x18\n\x10tick_time_series\x18\x11 \x01(\t"\xe1\x01\n\x05Image\x12\x0b\n\x03url\x18\x01 \x02(\t\x12\r\n\x05width\x18\x02 \x01(\r\x12\x0e\n\x06height\x18\x03 \x01(\r\x12\x0c\n\x04time\x18\x04 \x01(\t\x12\x0f\n\x07\x63\x61ption\x18\x05 \x01(\t\x12\x0f\n\x07user_id\x18\x06 \x01(\t\x12\x0e\n\x06keg_id\x18\x07 \x01(\r\x12\x12\n\nsession_id\x18\x08 \x01(\r\x12\x10\n\x08\x64rink_id\x18\t \x01(\r\x12\x15\n\rthumbnail_url\x18\n \x01(\t\x12\x14\n\x0coriginal_url\x18\x0b \x01(\t\x12\x19\n\x11small_resized_url\x18\r \x01(\t"\x95\x04\n\x03Keg\x12\n\n\x02id\x18\x01 \x02(\r\x12\x10\n\x08keg_type\x18\x02 \x02(\t\x12\x1b\n\x13remaining_volume_ml\x18\x03 \x02(\x01\x12\x16\n\x0e\x66ull_volume_ml\x18\x04 \x02(\x01\x12\x18\n\x10served_volume_ml\x18\x05 \x02(\x01\x12\x19\n\x11spilled_volume_ml\x18\x06 \x02(\x01\x12\x14\n\x0cpercent_full\x18\x07 \x02(\x01\x12\x12\n\nstart_time\x18\x08 \x01(\t\x12\x10\n\x08\x65nd_time\x18\t \x01(\t\x12\x0e\n\x06online\x18\n \x01(\x08\x12\x13\n\x0b\x64\x65scription\x18\x0b \x01(\t\x12\x1b\n\x08\x62\x65verage\x18\x0c \x01(\x0b\x32\t.Beverage\x12\x18\n\x10illustration_url\x18\x15 \x01(\t\x12"\n\x1aillustration_thumbnail_url\x18\x16 \x01(\t\x12\x1b\n\x04type\x18\r \x01(\x0b\x32\t.BeerTypeB\x02\x18\x01\x12\x13\n\x07type_id\x18\x0e \x01(\tB\x02\x18\x01\x12\x13\n\x07size_id\x18\x0f \x01(\rB\x02\x18\x01\x12\x1a\n\x04size\x18\x10 \x01(\x0b\x32\x08.KegSizeB\x02\x18\x01\x12\x15\n\tsize_name\x18\x11 \x01(\tB\x02\x18\x01\x12\x1a\n\x0esize_volume_ml\x18\x12 \x01(\x01\x42\x02\x18\x01\x12\x1c\n\x10volume_ml_remain\x18\x13 \x01(\x01\x42\x02\x18\x01\x12\x16\n\nspilled_ml\x18\x14 \x01(\x01\x42\x02\x18\x01"6\n\x07KegSize\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x11\n\tvolume_ml\x18\x03 \x02(\x01"Q\n\nController\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x12\n\nmodel_name\x18\x03 \x01(\t\x12\x15\n\rserial_number\x18\x04 \x01(\t"o\n\tFlowMeter\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x11\n\tport_name\x18\x03 \x02(\t\x12\x14\n\x0cticks_per_ml\x18\x04 \x02(\x01\x12\x1f\n\ncontroller\x18\x05 \x01(\x0b\x32\x0b.Controller"Z\n\nFlowToggle\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x11\n\tport_name\x18\x03 \x02(\t\x12\x1f\n\ncontroller\x18\x04 \x01(\x0b\x32\x0b.Controller"\xe0\x02\n\x06KegTap\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x16\n\nmeter_name\x18\x03 \x01(\tB\x02\x18\x01\x12\x19\n\x05meter\x18\x0c \x01(\x0b\x32\n.FlowMeter\x12\x1b\n\x06toggle\x18\r \x01(\x0b\x32\x0b.FlowToggle\x12$\n\rthermo_sensor\x18\x0e \x01(\x0b\x32\r.ThermoSensor\x12\x12\n\nrelay_name\x18\x04 \x01(\t\x12\x13\n\x0bml_per_tick\x18\x05 \x01(\x01\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x18\n\x10thermo_sensor_id\x18\x08 \x01(\r\x12$\n\x10last_temperature\x18\t \x01(\x0b\x32\n.ThermoLog\x12\x16\n\x0e\x63urrent_keg_id\x18\n \x01(\r\x12\x19\n\x0b\x63urrent_keg\x18\x0b \x01(\x0b\x32\x04.Keg\x12\x15\n\nsort_order\x18\x0f \x01(\r:\x01\x30"\x8e\x01\n\x07Session\x12\n\n\x02id\x18\x01 \x02(\r\x12\x12\n\nstart_time\x18\x02 \x02(\t\x12\x10\n\x08\x65nd_time\x18\x03 \x02(\t\x12\x11\n\tvolume_ml\x18\x04 \x02(\x01\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x10\n\x04slug\x18\x06 \x01(\tB\x02\x18\x01\x12\x0b\n\x03url\x18\x07 \x01(\t\x12\x11\n\tis_active\x18\x08 \x01(\x08"O\n\tThermoLog\x12\n\n\x02id\x18\x01 \x02(\r\x12\x11\n\tsensor_id\x18\x02 \x02(\r\x12\x15\n\rtemperature_c\x18\x03 \x02(\x01\x12\x0c\n\x04time\x18\x04 \x02(\t"\x8e\x01\n\x0cThermoSensor\x12\n\n\x02id\x18\x01 \x02(\r\x12\x13\n\x0bsensor_name\x18\x02 \x02(\t\x12\x11\n\tnice_name\x18\x03 \x01(\t\x12\x1c\n\x08last_log\x18\x06 \x01(\x0b\x32\n.ThermoLog\x12\x15\n\tlast_temp\x18\x04 \x01(\x01\x42\x02\x18\x01\x12\x15\n\tlast_time\x18\x05 \x01(\tB\x02\x18\x01"\x84\x02\n\x04User\x12\x10\n\x08username\x18\x01 \x02(\t\x12\x14\n\x0c\x64isplay_name\x18\r \x01(\t\x12\x15\n\x05image\x18\x02 \x01(\x0b\x32\x06.Image\x12\x17\n\tis_active\x18\x03 \x02(\x08:\x04true\x12\x12\n\nfirst_name\x18\x04 \x01(\t\x12\x11\n\tlast_name\x18\x05 \x01(\t\x12\r\n\x05\x65mail\x18\x06 \x01(\t\x12\x10\n\x08password\x18\x07 \x01(\t\x12\x10\n\x08is_staff\x18\x08 \x01(\x08\x12\x14\n\x0cis_superuser\x18\t \x01(\x08\x12\x12\n\nlast_login\x18\n \x01(\t\x12\x13\n\x0b\x64\x61te_joined\x18\x0b \x01(\t\x12\x0b\n\x03url\x18\x0c \x01(\t"1\n\x08SiteInfo\x12\r\n\x05title\x18\x01 \x01(\t\x12\x16\n\x0eserver_version\x18\x02 \x01(\t"\xed\x01\n\x0bSystemEvent\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0c\n\x04kind\x18\x02 \x02(\t\x12\x0c\n\x04time\x18\x03 \x02(\t\x12\x10\n\x08\x64rink_id\x18\x04 \x01(\r\x12\x0e\n\x06keg_id\x18\x05 \x01(\r\x12\x12\n\nsession_id\x18\x06 \x01(\r\x12\x0f\n\x07user_id\x18\x07 \x01(\t\x12\x15\n\x05image\x18\x08 \x01(\x0b\x32\x06.Image\x12\x13\n\x04user\x18\t \x01(\x0b\x32\x05.User\x12\x15\n\x05\x64rink\x18\n \x01(\x0b\x32\x06.Drink\x12\x11\n\x03keg\x18\x0b \x01(\x0b\x32\x04.Keg\x12\x19\n\x07session\x18\x0c \x01(\x0b\x32\x08.Session"Z\n\nSoundEvent\x12\x12\n\nevent_name\x18\x01 \x02(\t\x12\x17\n\x0f\x65vent_predicate\x18\x02 \x01(\t\x12\x11\n\tsound_url\x18\x03 \x02(\t\x12\x0c\n\x04user\x18\x04 \x01(\tB\x14\n\x10org.kegbot.protoH\x02'
)


_AUTHENTICATIONTOKEN = DESCRIPTOR.message_types_by_name["AuthenticationToken"]
_BEVERAGEPRODUCER = DESCRIPTOR.message_types_by_name["BeverageProducer"]
_BEVERAGE = DESCRIPTOR.message_types_by_name["Beverage"]
_BEERSTYLE = DESCRIPTOR.message_types_by_name["BeerStyle"]
_BEERTYPE = DESCRIPTOR.message_types_by_name["BeerType"]
_BREWER = DESCRIPTOR.message_types_by_name["Brewer"]
_DRINK = DESCRIPTOR.message_types_by_name["Drink"]
_IMAGE = DESCRIPTOR.message_types_by_name["Image"]
_KEG = DESCRIPTOR.message_types_by_name["Keg"]
_KEGSIZE = DESCRIPTOR.message_types_by_name["KegSize"]
_CONTROLLER = DESCRIPTOR.message_types_by_name["Controller"]
_FLOWMETER = DESCRIPTOR.message_types_by_name["FlowMeter"]
_FLOWTOGGLE = DESCRIPTOR.message_types_by_name["FlowToggle"]
_KEGTAP = DESCRIPTOR.message_types_by_name["KegTap"]
_SESSION = DESCRIPTOR.message_types_by_name["Session"]
_THERMOLOG = DESCRIPTOR.message_types_by_name["ThermoLog"]
_THERMOSENSOR = DESCRIPTOR.message_types_by_name["ThermoSensor"]
_USER = DESCRIPTOR.message_types_by_name["User"]
_SITEINFO = DESCRIPTOR.message_types_by_name["SiteInfo"]
_SYSTEMEVENT = DESCRIPTOR.message_types_by_name["SystemEvent"]
_SOUNDEVENT = DESCRIPTOR.message_types_by_name["SoundEvent"]
AuthenticationToken = _reflection.GeneratedProtocolMessageType(
    "AuthenticationToken",
    (_message.Message,),
    {
        "DESCRIPTOR": _AUTHENTICATIONTOKEN,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:AuthenticationToken)
    },
)
_sym_db.RegisterMessage(AuthenticationToken)

BeverageProducer = _reflection.GeneratedProtocolMessageType(
    "BeverageProducer",
    (_message.Message,),
    {
        "DESCRIPTOR": _BEVERAGEPRODUCER,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:BeverageProducer)
    },
)
_sym_db.RegisterMessage(BeverageProducer)

Beverage = _reflection.GeneratedProtocolMessageType(
    "Beverage",
    (_message.Message,),
    {
        "DESCRIPTOR": _BEVERAGE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Beverage)
    },
)
_sym_db.RegisterMessage(Beverage)

BeerStyle = _reflection.GeneratedProtocolMessageType(
    "BeerStyle",
    (_message.Message,),
    {
        "DESCRIPTOR": _BEERSTYLE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:BeerStyle)
    },
)
_sym_db.RegisterMessage(BeerStyle)

BeerType = _reflection.GeneratedProtocolMessageType(
    "BeerType",
    (_message.Message,),
    {
        "DESCRIPTOR": _BEERTYPE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:BeerType)
    },
)
_sym_db.RegisterMessage(BeerType)

Brewer = _reflection.GeneratedProtocolMessageType(
    "Brewer",
    (_message.Message,),
    {
        "DESCRIPTOR": _BREWER,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Brewer)
    },
)
_sym_db.RegisterMessage(Brewer)

Drink = _reflection.GeneratedProtocolMessageType(
    "Drink",
    (_message.Message,),
    {
        "DESCRIPTOR": _DRINK,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Drink)
    },
)
_sym_db.RegisterMessage(Drink)

Image = _reflection.GeneratedProtocolMessageType(
    "Image",
    (_message.Message,),
    {
        "DESCRIPTOR": _IMAGE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Image)
    },
)
_sym_db.RegisterMessage(Image)

Keg = _reflection.GeneratedProtocolMessageType(
    "Keg",
    (_message.Message,),
    {
        "DESCRIPTOR": _KEG,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Keg)
    },
)
_sym_db.RegisterMessage(Keg)

KegSize = _reflection.GeneratedProtocolMessageType(
    "KegSize",
    (_message.Message,),
    {
        "DESCRIPTOR": _KEGSIZE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:KegSize)
    },
)
_sym_db.RegisterMessage(KegSize)

Controller = _reflection.GeneratedProtocolMessageType(
    "Controller",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONTROLLER,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Controller)
    },
)
_sym_db.RegisterMessage(Controller)

FlowMeter = _reflection.GeneratedProtocolMessageType(
    "FlowMeter",
    (_message.Message,),
    {
        "DESCRIPTOR": _FLOWMETER,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:FlowMeter)
    },
)
_sym_db.RegisterMessage(FlowMeter)

FlowToggle = _reflection.GeneratedProtocolMessageType(
    "FlowToggle",
    (_message.Message,),
    {
        "DESCRIPTOR": _FLOWTOGGLE,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:FlowToggle)
    },
)
_sym_db.RegisterMessage(FlowToggle)

KegTap = _reflection.GeneratedProtocolMessageType(
    "KegTap",
    (_message.Message,),
    {
        "DESCRIPTOR": _KEGTAP,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:KegTap)
    },
)
_sym_db.RegisterMessage(KegTap)

Session = _reflection.GeneratedProtocolMessageType(
    "Session",
    (_message.Message,),
    {
        "DESCRIPTOR": _SESSION,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:Session)
    },
)
_sym_db.RegisterMessage(Session)

ThermoLog = _reflection.GeneratedProtocolMessageType(
    "ThermoLog",
    (_message.Message,),
    {
        "DESCRIPTOR": _THERMOLOG,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:ThermoLog)
    },
)
_sym_db.RegisterMessage(ThermoLog)

ThermoSensor = _reflection.GeneratedProtocolMessageType(
    "ThermoSensor",
    (_message.Message,),
    {
        "DESCRIPTOR": _THERMOSENSOR,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:ThermoSensor)
    },
)
_sym_db.RegisterMessage(ThermoSensor)

User = _reflection.GeneratedProtocolMessageType(
    "User",
    (_message.Message,),
    {
        "DESCRIPTOR": _USER,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:User)
    },
)
_sym_db.RegisterMessage(User)

SiteInfo = _reflection.GeneratedProtocolMessageType(
    "SiteInfo",
    (_message.Message,),
    {
        "DESCRIPTOR": _SITEINFO,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:SiteInfo)
    },
)
_sym_db.RegisterMessage(SiteInfo)

SystemEvent = _reflection.GeneratedProtocolMessageType(
    "SystemEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _SYSTEMEVENT,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:SystemEvent)
    },
)
_sym_db.RegisterMessage(SystemEvent)

SoundEvent = _reflection.GeneratedProtocolMessageType(
    "SoundEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _SOUNDEVENT,
        "__module__": "models_pb2"
        # @@protoc_insertion_point(class_scope:SoundEvent)
    },
)
_sym_db.RegisterMessage(SoundEvent)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n\020org.kegbot.protoH\002"
    _KEG.fields_by_name["type"]._options = None
    _KEG.fields_by_name["type"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["type_id"]._options = None
    _KEG.fields_by_name["type_id"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["size_id"]._options = None
    _KEG.fields_by_name["size_id"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["size"]._options = None
    _KEG.fields_by_name["size"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["size_name"]._options = None
    _KEG.fields_by_name["size_name"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["size_volume_ml"]._options = None
    _KEG.fields_by_name["size_volume_ml"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["volume_ml_remain"]._options = None
    _KEG.fields_by_name["volume_ml_remain"]._serialized_options = b"\030\001"
    _KEG.fields_by_name["spilled_ml"]._options = None
    _KEG.fields_by_name["spilled_ml"]._serialized_options = b"\030\001"
    _KEGTAP.fields_by_name["meter_name"]._options = None
    _KEGTAP.fields_by_name["meter_name"]._serialized_options = b"\030\001"
    _SESSION.fields_by_name["slug"]._options = None
    _SESSION.fields_by_name["slug"]._serialized_options = b"\030\001"
    _THERMOSENSOR.fields_by_name["last_temp"]._options = None
    _THERMOSENSOR.fields_by_name["last_temp"]._serialized_options = b"\030\001"
    _THERMOSENSOR.fields_by_name["last_time"]._options = None
    _THERMOSENSOR.fields_by_name["last_time"]._serialized_options = b"\030\001"
    _AUTHENTICATIONTOKEN._serialized_start = 17
    _AUTHENTICATIONTOKEN._serialized_end = 223
    _BEVERAGEPRODUCER._serialized_start = 226
    _BEVERAGEPRODUCER._serialized_end = 410
    _BEVERAGE._serialized_start = 413
    _BEVERAGE._serialized_end = 853
    _BEERSTYLE._serialized_start = 855
    _BEERSTYLE._serialized_end = 892
    _BEERTYPE._serialized_start = 895
    _BEERTYPE._serialized_end = 1112
    _BREWER._serialized_start = 1115
    _BREWER._serialized_end = 1298
    _DRINK._serialized_start = 1301
    _DRINK._serialized_end = 1607
    _IMAGE._serialized_start = 1610
    _IMAGE._serialized_end = 1835
    _KEG._serialized_start = 1838
    _KEG._serialized_end = 2371
    _KEGSIZE._serialized_start = 2373
    _KEGSIZE._serialized_end = 2427
    _CONTROLLER._serialized_start = 2429
    _CONTROLLER._serialized_end = 2510
    _FLOWMETER._serialized_start = 2512
    _FLOWMETER._serialized_end = 2623
    _FLOWTOGGLE._serialized_start = 2625
    _FLOWTOGGLE._serialized_end = 2715
    _KEGTAP._serialized_start = 2718
    _KEGTAP._serialized_end = 3070
    _SESSION._serialized_start = 3073
    _SESSION._serialized_end = 3215
    _THERMOLOG._serialized_start = 3217
    _THERMOLOG._serialized_end = 3296
    _THERMOSENSOR._serialized_start = 3299
    _THERMOSENSOR._serialized_end = 3441
    _USER._serialized_start = 3444
    _USER._serialized_end = 3704
    _SITEINFO._serialized_start = 3706
    _SITEINFO._serialized_end = 3755
    _SYSTEMEVENT._serialized_start = 3758
    _SYSTEMEVENT._serialized_end = 3995
    _SOUNDEVENT._serialized_start = 3997
    _SOUNDEVENT._serialized_end = 4087
# @@protoc_insertion_point(module_scope)
