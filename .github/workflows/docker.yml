name: Docker Build

env:
  IMAGE_NAME: kegbot/server

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo ::set-output name=tag_name::${TAG}
            echo ::set-output name=version::${TAG%-*}
          else
            echo ::set-output name=version::snapshot
          fi
          echo ::set-output name=build_archs::linux/amd64
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      # Work around an armv7 -> qemu bug caused during rust compilation. Yeah.. See repo.
      - name: Run Docker on tmpfs
        uses: JonasAlfredsson/docker-on-tmpfs@v1
        with:
          tmpfs_size: 5
          swap_size: 4
          swap_location: '/mnt/swapfile'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up the tag(s) we will build/push. The `metadata-action` action has
      # a bunch of rules and a little language for specifying this. This should
      # be how it's configured:
      #
      # =================== ============================= =============
      # When                What                          Example
      # =================== ============================= =============
      # All runs            <target-branch-name>-dev      master-dev
      # Merge to master     "latest"                      latest
      # Merge tag           <tag>                         v1.2.3b1
      # Merge semver tag    <semver>                      1.2.3
      # Merge semver tag    <major>.<minor>               1.2     
      -
        name: Set up docker tag names
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{base_ref}}-dev
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build locally
        uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BUILD_DATE=${{ steps.prepare.outputs.build_date }}
            GIT_SHORT_SHA=${GITHUB_SHA::8}
            VERSION=${{ steps.prepare.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm/v7

      -
        name: Login to registry
        if: ${{ '${{ secrets.DOCKER_HUB_PASSWORD }}' != '' && '${{ secrets.DOCKER_HUB_USERNAME }}' != '' }}
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build and push to registry
        if: ${{ '${{ secrets.DOCKER_HUB_PASSWORD }}' != '' && '${{ secrets.DOCKER_HUB_USERNAME }}' != '' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BUILD_DATE=${{ steps.prepare.outputs.build_date }}
            GIT_SHORT_SHA=${GITHUB_SHA::8}
            VERSION=${{ steps.prepare.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm/v7
