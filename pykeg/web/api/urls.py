from django.urls import path

from . import views

urlpatterns = [
    # General endpoints
    path("status/", views.get_status),
    path("version/", views.get_version),
    # API authorization
    path("login/", views.login),
    path("logout/", views.logout),
    path("get-api-key/", views.get_api_key),
    path("devices/link/", views.link_device_new),
    path("devices/link/status/", views.link_device_status),
    path("devices/link/status/<str:code>", views.link_device_status),
    # Kegbot objects
    path("auth-tokens/<str:auth_device>/<str:token_value>/", views.get_auth_token),
    path(
        "auth-tokens/<str:auth_device>/<str:token_value>/assign/",
        views.assign_auth_token,
    ),
    path("controllers/", views.all_controllers),
    path("controllers/<int:controller_id>", views.get_controller),
    path("drinks/", views.all_drinks),
    path("drinks/last/", views.last_drink),
    path("drinks/<int:drink_id>/", views.get_drink),
    path("drinks/<int:drink_id>/add-photo/", views.add_drink_photo),
    path("cancel-drink/", views.cancel_drink),
    path("events/", views.all_events),
    path("flow-meters/", views.all_flow_meters),
    path("flow-meters/<int:flow_meter_id>/", views.get_flow_meter),
    path("flow-toggles/", views.all_flow_toggles),
    path("flow-toggles/<int:flow_toggle_id>/", views.get_flow_toggle),
    path("kegs/", views.all_kegs),
    path("kegs/<int:keg_id>/", views.get_keg),
    path("kegs/<int:keg_id>/end/", views.end_keg),
    path("kegs/<int:keg_id>/drinks/", views.get_keg_drinks),
    path("kegs/<int:keg_id>/events/", views.get_keg_events),
    path("kegs/<int:keg_id>/sessions/", views.get_keg_sessions),
    path("kegs/<int:keg_id>/stats/", views.get_keg_stats),
    path("keg-sizes/", views.get_keg_sizes),
    path("pictures/", views.pictures),
    path("sessions/", views.all_sessions),
    path("sessions/current/", views.current_session),
    path("sessions/<int:session_id>/", views.get_session),
    path("sessions/<int:session_id>/stats/", views.get_session_stats),
    path("taps/", views.all_taps),
    path("taps/<str:meter_name_or_id>/activate/", views.tap_activate),
    path("taps/<str:meter_name_or_id>/calibrate/", views.tap_calibrate),
    path("taps/<str:meter_name_or_id>/spill/", views.tap_spill),
    path("taps/<str:meter_name_or_id>/connect-meter/", views.tap_connect_meter),
    path("taps/<str:meter_name_or_id>/disconnect-meter/", views.tap_disconnect_meter),
    path("taps/<str:meter_name_or_id>/connect-toggle/", views.tap_connect_toggle),
    path("taps/<str:meter_name_or_id>/disconnect-toggle/", views.tap_disconnect_toggle),
    path("taps/<str:meter_name_or_id>/", views.tap_detail),
    path("thermo-sensors/", views.all_thermo_sensors),
    path("thermo-sensors/<str:sensor_name>/", views.get_thermo_sensor),
    path("thermo-sensors/<str:sensor_name>/logs/", views.get_thermo_sensor_logs),
    path("taps/<str:meter_name_or_id>/connect-thermo/", views.tap_connect_thermo),
    path("taps/<str:meter_name_or_id>/disconnect-thermo/", views.tap_disconnect_thermo),
    path("users/", views.user_list),
    path("users/<str:username>/drinks/", views.get_user_drinks),
    path("users/<str:username>/events/", views.get_user_events),
    path("users/<str:username>/stats/", views.get_user_stats),
    path("users/<str:username>/photo/", views.user_photo),
    path("users/<str:username>/", views.get_user),
    path("new-user/", views.register),
    path("stats/", views.get_system_stats),
    # Deprecated endpoints
    path("sound-events/", views.all_sound_events),
    # Catch-all
    path(r"", views.default_handler),
]
